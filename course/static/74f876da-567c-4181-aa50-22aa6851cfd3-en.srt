0
00:00:00,000 --> 00:00:02,070


1
00:00:02,070 --> 00:00:04,810
In this video, we consider lines without buffers,

2
00:00:04,810 --> 00:00:06,730
or buffers of size zero.

3
00:00:06,730 --> 00:00:10,240
This is the opposite extreme as the infinite-buffer case.

4
00:00:10,240 --> 00:00:12,790
Inventory is as small as it can be.

5
00:00:12,790 --> 00:00:15,670
But eliminating all possibilities of inventory

6
00:00:15,670 --> 00:00:18,010
will certainly reduce the production rate.

7
00:00:18,010 --> 00:00:20,820
The question is, by how much?

8
00:00:20,820 --> 00:00:23,460
This analysis provides a lower bound for the production

9
00:00:23,460 --> 00:00:25,110
rate of a line.

10
00:00:25,110 --> 00:00:27,750
If you have to design a line to meet a specified target

11
00:00:27,750 --> 00:00:30,870
production rate and you calculate that you can meet it

12
00:00:30,870 --> 00:00:33,630
without buffers, you don't need to consider buffers

13
00:00:33,630 --> 00:00:36,840
any further for the production rate of the line.

14
00:00:36,840 --> 00:00:40,870
You might possibly have to think about them for other reasons.

15
00:00:40,870 --> 00:00:44,870
As we will see, the calculation is pretty easy.

16
00:00:44,870 --> 00:00:47,630
If any one machine fails or takes a very long time

17
00:00:47,630 --> 00:00:52,800
to do an operation, all the other machines must wait.

18
00:00:52,800 --> 00:00:56,280
Therefore, the production rate is usually less, possibly

19
00:00:56,280 --> 00:00:59,800
much less, than the slowest machine of the line.

20
00:00:59,800 --> 00:01:02,410
The first case that we're going to consider

21
00:01:02,410 --> 00:01:05,890
is a line with constant unequal operation times and perfectly

22
00:01:05,890 --> 00:01:08,550
reliable machines.

23
00:01:08,550 --> 00:01:10,500
The operation time of the line is

24
00:01:10,500 --> 00:01:14,520
equal to the maximum operation time of all the machines.

25
00:01:14,520 --> 00:01:16,590
So the production rate of the line

26
00:01:16,590 --> 00:01:20,970
is the inverse of the maximum operation time.

27
00:01:20,970 --> 00:01:23,340
Line balancing is the assignment of tasks

28
00:01:23,340 --> 00:01:26,490
to machines in a way that minimizes the maximum operation

29
00:01:26,490 --> 00:01:28,000
time.

30
00:01:28,000 --> 00:01:30,700
Since there's no advantage to having any machine faster

31
00:01:30,700 --> 00:01:32,560
than any other machine, they should have

32
00:01:32,560 --> 00:01:34,720
about the same operation time.

33
00:01:34,720 --> 00:01:38,830
Parts produced on transfer lines generally require many tasks.

34
00:01:38,830 --> 00:01:41,680
Line designers are limited in the numbers of machines

35
00:01:41,680 --> 00:01:44,770
or workstations at which to perform those tasks because

36
00:01:44,770 --> 00:01:47,590
of space considerations and because some costs can

37
00:01:47,590 --> 00:01:51,290
be reduced by having tasks at the same location.

38
00:01:51,290 --> 00:01:54,170
Line balancing is the problem of allocating those tasks

39
00:01:54,170 --> 00:01:58,160
to workstations to minimize the maximum operation time.

40
00:01:58,160 --> 00:02:00,590
It is complicated by various constraints.

41
00:02:00,590 --> 00:02:03,860
Some tasks must be performed before some others.

42
00:02:03,860 --> 00:02:07,040
Some tasks must not be performed at the same machine

43
00:02:07,040 --> 00:02:08,600
at the same time.

44
00:02:08,600 --> 00:02:11,780
The part must be oriented in a certain way for some tasks

45
00:02:11,780 --> 00:02:15,060
and then rotated for others, and so forth.

46
00:02:15,060 --> 00:02:17,300
This is a challenging combinatorial optimization

47
00:02:17,300 --> 00:02:21,240
problem, but we will not discuss it further in this course.

48
00:02:21,240 --> 00:02:22,880
Now we'll consider zero-buffer lines

49
00:02:22,880 --> 00:02:26,511
with unreliable machines and constant equal operation times.

50
00:02:26,511 --> 00:02:28,760
We will look at two ways of calculating the production

51
00:02:28,760 --> 00:02:31,093
rate of this kind of line based on two different failure

52
00:02:31,093 --> 00:02:32,930
models.

53
00:02:32,930 --> 00:02:35,430
First, we'll make the assumption of time-dependent failures.

54
00:02:35,430 --> 00:02:37,080
Remember, time-dependent failures

55
00:02:37,080 --> 00:02:41,740
means that machines can fail even if they're idle.

56
00:02:41,740 --> 00:02:45,800
The operation time is the time unit.

57
00:02:45,800 --> 00:02:47,430
The efficiency is the probability

58
00:02:47,430 --> 00:02:51,120
that machine Mi is operational in any time unit.

59
00:02:51,120 --> 00:02:53,180
EI is the efficiency and isolation

60
00:02:53,180 --> 00:02:56,300
of machine's production rate and parts per operation time

61
00:02:56,300 --> 00:02:59,170
if it were the only machine in a factory.

62
00:02:59,170 --> 00:03:01,110
But since it can fail regardless of the states

63
00:03:01,110 --> 00:03:03,360
of the other machines, it is the probability

64
00:03:03,360 --> 00:03:05,810
that that machine is up.

65
00:03:05,810 --> 00:03:08,440
A part is produced as often as all the machines are

66
00:03:08,440 --> 00:03:09,790
operational.

67
00:03:09,790 --> 00:03:12,984
We assume that if any machine fails, the line stops.

68
00:03:12,984 --> 00:03:14,400
This is certainly correct if there

69
00:03:14,400 --> 00:03:16,750
is a mechanism that shuts the whole line when

70
00:03:16,750 --> 00:03:18,460
any machine fails.

71
00:03:18,460 --> 00:03:22,980
If not, the formulas we derive may not be exactly correct.

72
00:03:22,980 --> 00:03:25,170
For example, the machines downstream of the failure

73
00:03:25,170 --> 00:03:27,480
can still work if there are parts in those machines

74
00:03:27,480 --> 00:03:30,840
and the transfer mechanism keeps operating.

75
00:03:30,840 --> 00:03:32,400
Those machines can do productive work

76
00:03:32,400 --> 00:03:34,690
until those parts leave the system.

77
00:03:34,690 --> 00:03:37,020
However, if that happens, some or all

78
00:03:37,020 --> 00:03:39,150
of the machines downstream of the failure

79
00:03:39,150 --> 00:03:42,660
will have no parts at the time that that machine is repaired.

80
00:03:42,660 --> 00:03:44,340
For that reason, those machines will

81
00:03:44,340 --> 00:03:47,940
be idle after the repair for the same length of time

82
00:03:47,940 --> 00:03:50,580
as they were working after the failure.

83
00:03:50,580 --> 00:03:55,510
So the following formula is probably not too bad.

84
00:03:55,510 --> 00:03:57,070
Since machines fail independently

85
00:03:57,070 --> 00:03:58,680
of the states of the other machines,

86
00:03:58,680 --> 00:04:00,760
the probability that all machines are operational

87
00:04:00,760 --> 00:04:04,100
is just the product of all the efficiencies.

88
00:04:04,100 --> 00:04:05,850
Therefore, the production rate of the line

89
00:04:05,850 --> 00:04:11,070
is E TDF equals the product of all the efficiencies measured

90
00:04:11,070 --> 00:04:13,980
in parts per operation time.

91
00:04:13,980 --> 00:04:16,380
We use the capital E symbol because it's the production

92
00:04:16,380 --> 00:04:18,570
rate per operation time.

93
00:04:18,570 --> 00:04:20,579
It's also the line efficiency-- the fraction

94
00:04:20,579 --> 00:04:23,700
of the production rate of the line if it never failed.

95
00:04:23,700 --> 00:04:26,430
When the operation time is constant and 1,

96
00:04:26,430 --> 00:04:29,520
we use P and E interchangeably.

97
00:04:29,520 --> 00:04:30,660
Well, that's it for that.

98
00:04:30,660 --> 00:04:34,450
Now let's look at operation-dependent failures.

99
00:04:34,450 --> 00:04:36,250
I may forget to say so, but I will always

100
00:04:36,250 --> 00:04:38,020
be assuming operation-dependent failures

101
00:04:38,020 --> 00:04:39,190
unless I say otherwise.

102
00:04:39,190 --> 00:04:41,920
And I don't plan to say otherwise anymore.

103
00:04:41,920 --> 00:04:43,900
The operation time is the time unit.

104
00:04:43,900 --> 00:04:46,540
The assumption is that failure and repair times

105
00:04:46,540 --> 00:04:49,510
are geometrically distributed.

106
00:04:49,510 --> 00:04:50,980
Each machine is the kind of machine

107
00:04:50,980 --> 00:04:53,320
that we described in the discrete-time Markov chain

108
00:04:53,320 --> 00:04:54,390
video.

109
00:04:54,390 --> 00:04:56,770
pi is the probability of a failure of Machine I

110
00:04:56,770 --> 00:04:58,590
during an operation.

111
00:04:58,590 --> 00:05:01,990
ri is the probability of repair during an operation time

112
00:05:01,990 --> 00:05:03,840
when Machine I is down.

113
00:05:03,840 --> 00:05:06,620
We'll be deriving Buzacott's zero-buffer line formula

114
00:05:06,620 --> 00:05:08,260
shortly.

115
00:05:08,260 --> 00:05:09,901
But first, let's think about this.

116
00:05:09,901 --> 00:05:11,650
Which do you think has a higher production

117
00:05:11,650 --> 00:05:15,610
rate, a line with time-dependent failure machines

118
00:05:15,610 --> 00:05:17,620
or a line with operation-dependent failure

119
00:05:17,620 --> 00:05:20,020
machines with the same parameters?

120
00:05:20,020 --> 00:05:22,600
Before we derive it, I want to point out

121
00:05:22,600 --> 00:05:25,210
that this formula reduces to the earlier formula when

122
00:05:25,210 --> 00:05:26,950
k equals 1.

123
00:05:26,950 --> 00:05:29,530
According to the new formula, the isolated production rate

124
00:05:29,530 --> 00:05:35,050
of a single machine MI is 1 over 1 plus p1 over r1,

125
00:05:35,050 --> 00:05:38,020
which is equal to r1 over r1 plus p1, which

126
00:05:38,020 --> 00:05:40,600
is the same as the earlier formula when the operation time

127
00:05:40,600 --> 00:05:42,052
tau is equal to 1.

128
00:05:42,052 --> 00:05:44,650
The approximation that we're going to make is that, at most,

129
00:05:44,650 --> 00:05:47,550
only one machine can be down at a time.

130
00:05:47,550 --> 00:05:49,620
This is not too bad an assumption.

131
00:05:49,620 --> 00:05:53,070
The only way that two machines could be down at the same time

132
00:05:53,070 --> 00:05:56,417
is if they both fail simultaneously.

133
00:05:56,417 --> 00:05:57,750
Here's something to think about.

134
00:05:57,750 --> 00:05:59,791
Do you think that the formula that we're deriving

135
00:05:59,791 --> 00:06:02,240
overestimates or underestimates the production rate

136
00:06:02,240 --> 00:06:04,700
as a consequence of this approximation?

137
00:06:04,700 --> 00:06:07,070
Whichever it is, it won't be by much.

138
00:06:07,070 --> 00:06:09,860
Consider a long time interval of length T operation

139
00:06:09,860 --> 00:06:15,200
times, during which machine MI fails mi times.

140
00:06:15,200 --> 00:06:18,320
The green bars are the times when all the machines are up.

141
00:06:18,320 --> 00:06:21,560
The red bars are the times when one machine is down.

142
00:06:21,560 --> 00:06:24,740
It won't be the same machine every time, of course.

143
00:06:24,740 --> 00:06:28,220
In fact, the down machine is indicated above each red bar.

144
00:06:28,220 --> 00:06:33,020
Notice that machine M3 failed twice during this period.

145
00:06:33,020 --> 00:06:37,330
Without failures, the line would produce T parts.

146
00:06:37,330 --> 00:06:41,160
The line is down for 1 over ri operation times on the average

147
00:06:41,160 --> 00:06:43,680
each time machine MI fails.

148
00:06:43,680 --> 00:06:48,130
And machine MI fails little mi times.

149
00:06:48,130 --> 00:06:51,550
So the amount of downtime due to machine MI

150
00:06:51,550 --> 00:06:55,210
is little mi over ri, and the total amount of downtime

151
00:06:55,210 --> 00:06:58,561
is just the sum of that over all the machines.

152
00:06:58,561 --> 00:07:01,700
The total up time is given by this formula, which is simply

153
00:07:01,700 --> 00:07:05,800
U equals T minus D. U is the number of operation times

154
00:07:05,800 --> 00:07:09,080
in which all machines are up.

155
00:07:09,080 --> 00:07:11,540
Since the system produces one part per time unit

156
00:07:11,540 --> 00:07:13,790
while it's working, it produces U parts

157
00:07:13,790 --> 00:07:16,240
during the interval length T.

158
00:07:16,240 --> 00:07:19,700
Each time machine MI is up, it has a probability pi

159
00:07:19,700 --> 00:07:20,980
of failing.

160
00:07:20,980 --> 00:07:24,055
It's up U times, so the expected number of times it fails

161
00:07:24,055 --> 00:07:28,650
is pi times U. But we already have a name for the expected

162
00:07:28,650 --> 00:07:30,090
number of times machine MI.

163
00:07:30,090 --> 00:07:30,930
Fails.

164
00:07:30,930 --> 00:07:33,070
That's called mi.

165
00:07:33,070 --> 00:07:35,650
So we have this relationship.

166
00:07:35,650 --> 00:07:38,840
Plugging that back into the last formula we calculated,

167
00:07:38,840 --> 00:07:40,070
we have this.

168
00:07:40,070 --> 00:07:42,310
This is from replacing MI with pi

169
00:07:42,310 --> 00:07:46,540
U in the equation on slide 40.

170
00:07:46,540 --> 00:07:50,150
If we rearrange the terms, we find this equation.

171
00:07:50,150 --> 00:07:52,220
And that's really what we've been looking for.

172
00:07:52,220 --> 00:07:54,990
This is the formula we set out to prove.

173
00:07:54,990 --> 00:07:59,550
Note that P is a function of the ratio Pi over ri, and not

174
00:07:59,550 --> 00:08:02,660
Pi or ri separately.

175
00:08:02,660 --> 00:08:07,260
The same statement is true for the infinite-buffer line.

176
00:08:07,260 --> 00:08:08,850
However, the same statement is not

177
00:08:08,850 --> 00:08:13,280
true for a line with finite non-zero buffers.

178
00:08:13,280 --> 00:08:15,530
This is why it's hard to develop intuition

179
00:08:15,530 --> 00:08:19,550
for, and solution of mathematical models of, systems

180
00:08:19,550 --> 00:08:21,970
with finite buffers.

181
00:08:21,970 --> 00:08:26,000
So let's deal with the improvement questions again.

182
00:08:26,000 --> 00:08:28,010
If we want to increase production rate,

183
00:08:28,010 --> 00:08:30,410
which machine should we improve?

184
00:08:30,410 --> 00:08:32,270
And what would happen to the production rate

185
00:08:32,270 --> 00:08:35,350
if we improved any other machine?

186
00:08:35,350 --> 00:08:38,220
So here's another chance to test your intuition.

187
00:08:38,220 --> 00:08:42,770
Pause the video before you listen to my answers.

188
00:08:42,770 --> 00:08:44,240
So here's the first question again.

189
00:08:44,240 --> 00:08:46,220
If we want to increase production rate,

190
00:08:46,220 --> 00:08:48,830
which machine should we improve?

191
00:08:48,830 --> 00:08:51,470
We should improve the machine with the largest ratio

192
00:08:51,470 --> 00:08:54,170
Pi over ri because that is the largest

193
00:08:54,170 --> 00:08:57,440
term in the denominator of the formula for the production

194
00:08:57,440 --> 00:08:58,370
rate.

195
00:08:58,370 --> 00:09:02,769
Improving it means reducing P or increasing r.

196
00:09:02,769 --> 00:09:04,810
If there were buffers, we would call that machine

197
00:09:04,810 --> 00:09:06,724
the bottleneck.

198
00:09:06,724 --> 00:09:08,140
The second question is, what would

199
00:09:08,140 --> 00:09:11,940
happen to the production rate if we improved any other machine?

200
00:09:11,940 --> 00:09:14,100
Reducing any term in the denominator

201
00:09:14,100 --> 00:09:17,490
of Buzacott's formula will increase the production rate.

202
00:09:17,490 --> 00:09:20,970
Therefore, improving any machine could be useful.

203
00:09:20,970 --> 00:09:22,650
This is important because it might

204
00:09:22,650 --> 00:09:26,730
be very expensive to improve the least reliable machine

205
00:09:26,730 --> 00:09:30,980
and relatively cheap to improve other machines.

206
00:09:30,980 --> 00:09:32,944
Let's take a look at some graphs.

207
00:09:32,944 --> 00:09:34,610
This is the graph of the production rate

208
00:09:34,610 --> 00:09:37,190
of a line as a function of the failing probability of one

209
00:09:37,190 --> 00:09:38,130
of the machines.

210
00:09:38,130 --> 00:09:41,470
It comes from Buzacott's zero-buffer formula.

211
00:09:41,470 --> 00:09:44,230
The horizontal axis is pi.

212
00:09:44,230 --> 00:09:46,810
The horizontal axis is pi, the failing probability

213
00:09:46,810 --> 00:09:49,810
of Machine I. It doesn't really matter which machine.

214
00:09:49,810 --> 00:09:53,310
The vertical axis is the production rate.

215
00:09:53,310 --> 00:09:55,140
Clearly, as that machine gets bad,

216
00:09:55,140 --> 00:09:57,920
the production rate goes down.

217
00:09:57,920 --> 00:10:00,830
This graph compares a line with machines

218
00:10:00,830 --> 00:10:03,170
that have time-dependent failures and one

219
00:10:03,170 --> 00:10:06,620
that has machines with operation-dependent failures.

220
00:10:06,620 --> 00:10:09,320
The observation that we make from this graph

221
00:10:09,320 --> 00:10:12,260
is that the operation-dependent failure line

222
00:10:12,260 --> 00:10:15,380
has greater production rate than the time-dependent failure

223
00:10:15,380 --> 00:10:16,310
line.

224
00:10:16,310 --> 00:10:19,930
And the difference increases as the line gets longer.

225
00:10:19,930 --> 00:10:22,830
The reason for that is that when one machine fails,

226
00:10:22,830 --> 00:10:24,600
all machines stop.

227
00:10:24,600 --> 00:10:26,700
The operation-dependent failure assumption

228
00:10:26,700 --> 00:10:30,390
prevents the other machines from failing while they're idle.

229
00:10:30,390 --> 00:10:32,280
On the other hand, time-dependent failures

230
00:10:32,280 --> 00:10:34,592
allows the other machines to fail.

231
00:10:34,592 --> 00:10:37,050
Therefore, when the machine whose failing caused the damage

232
00:10:37,050 --> 00:10:40,140
is repaired, we could discover that some other machine

233
00:10:40,140 --> 00:10:41,700
is down.

234
00:10:41,700 --> 00:10:43,480
This graph compares the production rates

235
00:10:43,480 --> 00:10:46,450
of an infinite-buffer line with that of a zero-buffer line.

236
00:10:46,450 --> 00:10:48,310
All machines are the same.

237
00:10:48,310 --> 00:10:49,870
As the length of the line increases,

238
00:10:49,870 --> 00:10:52,764
the production rate of the zero-buffer line decreases.

239
00:10:52,764 --> 00:10:54,430
The production rate of the infinite line

240
00:10:54,430 --> 00:10:57,280
stays exactly the same.

241
00:10:57,280 --> 00:10:59,530
This provides a motivation for finite buffers,

242
00:10:59,530 --> 00:11:02,800
because we can't install infinite buffers,

243
00:11:02,800 --> 00:11:04,720
to increase the production rate to somewhere

244
00:11:04,720 --> 00:11:07,639
between that of zero buffers and infinite buffers.

245
00:11:07,639 --> 00:11:08,139


