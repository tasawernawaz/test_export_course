0
00:00:00,000 --> 00:00:02,780


1
00:00:02,780 --> 00:00:05,630
This is the first of two videos on Kanban.

2
00:00:05,630 --> 00:00:07,280
Some people who are only superficially

3
00:00:07,280 --> 00:00:08,990
aware of the Toyota production system

4
00:00:08,990 --> 00:00:11,750
think that kanban is the Toyota production system.

5
00:00:11,750 --> 00:00:15,940
It is a key part, but it's not the whole system.

6
00:00:15,940 --> 00:00:18,670
Kanban is an information system for controlling production

7
00:00:18,670 --> 00:00:20,590
quantity and timing.

8
00:00:20,590 --> 00:00:23,380
It's important to recognize that material is not the only thing

9
00:00:23,380 --> 00:00:24,520
that flows in a factory.

10
00:00:24,520 --> 00:00:26,590
Information flows as well.

11
00:00:26,590 --> 00:00:28,180
The flow of information is important

12
00:00:28,180 --> 00:00:30,880
for the efficient operation of a factory.

13
00:00:30,880 --> 00:00:32,650
The information conveyed by kanbans

14
00:00:32,650 --> 00:00:35,260
is about when a process is completed in an operation

15
00:00:35,260 --> 00:00:38,560
and about when a process needs material to work on.

16
00:00:38,560 --> 00:00:39,820
Kanban means card.

17
00:00:39,820 --> 00:00:42,010
It was originally implemented as an actual card,

18
00:00:42,010 --> 00:00:43,660
but it can have other forms.

19
00:00:43,660 --> 00:00:46,030
It could be represented by a container for material

20
00:00:46,030 --> 00:00:49,690
or it could be a virtual card in a computer network.

21
00:00:49,690 --> 00:00:51,640
A withdrawal kanban describes the quantity

22
00:00:51,640 --> 00:00:54,500
that a subsequent process must withdraw.

23
00:00:54,500 --> 00:00:56,800
A production-ordering kanban describes the quantity

24
00:00:56,800 --> 00:00:59,560
that a preceding process must produce.

25
00:00:59,560 --> 00:01:01,960
We'll describe these in more detail later

26
00:01:01,960 --> 00:01:05,560
and will mention others kanbans as well.

27
00:01:05,560 --> 00:01:07,480
Kanbans circulate within factories

28
00:01:07,480 --> 00:01:12,090
as low-level shop floor control and between factories.

29
00:01:12,090 --> 00:01:13,630
In other production control systems,

30
00:01:13,630 --> 00:01:16,000
schedules are issued to all processes.

31
00:01:16,000 --> 00:01:18,400
We discussed the difference between pull and push systems

32
00:01:18,400 --> 00:01:20,530
in the previous video.

33
00:01:20,530 --> 00:01:22,360
In push control systems, schedules

34
00:01:22,360 --> 00:01:25,280
are issued to all processes.

35
00:01:25,280 --> 00:01:28,600
But push systems cannot easily adapt to demand fluctuations,

36
00:01:28,600 --> 00:01:31,630
disruptions, and so forth.

37
00:01:31,630 --> 00:01:34,420
This leads to excessive inventory.

38
00:01:34,420 --> 00:01:36,010
Inventory can actually reduce some

39
00:01:36,010 --> 00:01:39,191
of the effects of randomness and variable, but it has a cost.

40
00:01:39,191 --> 00:01:40,690
It's better to reduce the randomness

41
00:01:40,690 --> 00:01:43,260
and variability themselves.

42
00:01:43,260 --> 00:01:46,020
Kanban is a pull system.

43
00:01:46,020 --> 00:01:48,180
When demand changes occur, it's enough to notify

44
00:01:48,180 --> 00:01:49,920
the final assembly.

45
00:01:49,920 --> 00:01:52,350
All proceeding stages learn about schedule changes

46
00:01:52,350 --> 00:01:54,480
through the kanban system.

47
00:01:54,480 --> 00:01:57,180
It's not necessary to issue updated detailed schedules

48
00:01:57,180 --> 00:01:58,530
at each stage.

49
00:01:58,530 --> 00:02:01,260
Each stage notifies its upstream neighbor,

50
00:02:01,260 --> 00:02:04,380
Kanbans coordinate production without disruption propagation

51
00:02:04,380 --> 00:02:06,330
caused by scheduling changes.

52
00:02:06,330 --> 00:02:08,580
Kanbans allow systems to operate based

53
00:02:08,580 --> 00:02:11,070
on local real-time information.

54
00:02:11,070 --> 00:02:12,660
The number of kanbans at each stage

55
00:02:12,660 --> 00:02:15,720
determines the maximum inventory at that stage.

56
00:02:15,720 --> 00:02:17,820
They can be one card for each part

57
00:02:17,820 --> 00:02:20,250
or one card for a batch of parts.

58
00:02:20,250 --> 00:02:22,200
This slide is very similar to one presented

59
00:02:22,200 --> 00:02:23,790
in the first week of this course,

60
00:02:23,790 --> 00:02:26,700
but we've added something new-- kanbans.

61
00:02:26,700 --> 00:02:28,890
Now, in order for the operation to take place,

62
00:02:28,890 --> 00:02:33,280
there must be a kanban present as well as everything else.

63
00:02:33,280 --> 00:02:34,660
There must also be a place to put

64
00:02:34,660 --> 00:02:37,169
the kanban after the operation is completed.

65
00:02:37,169 --> 00:02:38,710
But this will not be an issue for now

66
00:02:38,710 --> 00:02:42,350
because we will assume that the kanban buffers are infinite.

67
00:02:42,350 --> 00:02:44,070
Kanbans function as a part of the control

68
00:02:44,070 --> 00:02:47,230
system that prevents operations from taking place.

69
00:02:47,230 --> 00:02:49,170
Why would we ever want to prevent an operation

70
00:02:49,170 --> 00:02:50,640
from taking place?

71
00:02:50,640 --> 00:02:53,560
Kanbans reduce production rates in a controlled way,

72
00:02:53,560 --> 00:02:56,250
and as a result, reduce inventory.

73
00:02:56,250 --> 00:02:58,890
In the following discussion of kanban systems,

74
00:02:58,890 --> 00:03:00,410
each square is going to represent

75
00:03:00,410 --> 00:03:02,760
an individual machine, a multi-machine work

76
00:03:02,760 --> 00:03:06,460
cell, or a subprocess consisting of several cells.

77
00:03:06,460 --> 00:03:08,560
It could be an entire factory.

78
00:03:08,560 --> 00:03:10,570
Flow into and out of the square need not

79
00:03:10,570 --> 00:03:14,600
be the same as that of any other square at the same time.

80
00:03:14,600 --> 00:03:16,670
The movement of kanbans can be more complex

81
00:03:16,670 --> 00:03:18,470
than described here.

82
00:03:18,470 --> 00:03:21,350
The kanbans are used to signal when production is needed.

83
00:03:21,350 --> 00:03:22,850
They can also have other information

84
00:03:22,850 --> 00:03:25,880
on them describing the part that they're associated with.

85
00:03:25,880 --> 00:03:29,630
We will discuss one-card systems now and two-card kanban systems

86
00:03:29,630 --> 00:03:31,290
in the next video.

87
00:03:31,290 --> 00:03:33,540
In this video, we have these squares that I mentioned,

88
00:03:33,540 --> 00:03:36,630
which will be used to represent machines where operations

89
00:03:36,630 --> 00:03:39,550
are taking place.

90
00:03:39,550 --> 00:03:40,480
Here's a buffer.

91
00:03:40,480 --> 00:03:43,540
This big circle is the work-in-process buffer,

92
00:03:43,540 --> 00:03:45,460
a WIP buffer.

93
00:03:45,460 --> 00:03:48,927
This is the kanban buffer up here.

94
00:03:48,927 --> 00:03:51,260
We refer to the machine on the left as the first machine

95
00:03:51,260 --> 00:03:53,650
or the upstream machine of the line.

96
00:03:53,650 --> 00:03:57,530
The machine on the right is the second or downstream machine.

97
00:03:57,530 --> 00:03:59,840
First, let's consider the dynamics

98
00:03:59,840 --> 00:04:02,640
of the upstream machine.

99
00:04:02,640 --> 00:04:04,980
The upstream machine is able to do an operation when

100
00:04:04,980 --> 00:04:08,310
its previous operation or downtime is completed,

101
00:04:08,310 --> 00:04:11,320
when there's a kanban in the kanban buffer

102
00:04:11,320 --> 00:04:13,770
and a part is available to work on.

103
00:04:13,770 --> 00:04:16,920
After the operation, the kanban is attached to the part

104
00:04:16,920 --> 00:04:19,320
and they move to the WIP buffer together.

105
00:04:19,320 --> 00:04:21,779
The upstream cycle repeats.

106
00:04:21,779 --> 00:04:23,970
The upstream machine performs an operation,

107
00:04:23,970 --> 00:04:26,400
and then does an assembly-- the card to the part.

108
00:04:26,400 --> 00:04:28,980
It could equally go in the other direction.

109
00:04:28,980 --> 00:04:33,160
The part and the kanban go into the buffer together.

110
00:04:33,160 --> 00:04:35,110
The operation does not happen if there's

111
00:04:35,110 --> 00:04:38,830
no part arriving from outside or, for our purposes,

112
00:04:38,830 --> 00:04:41,260
more importantly, if the kanban buffer is empty.

113
00:04:41,260 --> 00:04:44,190


114
00:04:44,190 --> 00:04:46,620
Now, let's focus on the downstream machine.

115
00:04:46,620 --> 00:04:49,500
When the previous operation or downtime

116
00:04:49,500 --> 00:04:51,780
of the downstream machine is completed

117
00:04:51,780 --> 00:04:54,390
and the machine is not blocked, the downstream machine

118
00:04:54,390 --> 00:04:57,490
takes a part from the WIP buffer.

119
00:04:57,490 --> 00:05:00,760
It removes the kanban and puts it in the kanban buffer.

120
00:05:00,760 --> 00:05:02,830
It does the operation on the part and the part

121
00:05:02,830 --> 00:05:05,490
is sent to its next production step,

122
00:05:05,490 --> 00:05:07,680
and the downstream cycle repeats.

123
00:05:07,680 --> 00:05:10,144
If the downstream buffer goes down,

124
00:05:10,144 --> 00:05:12,060
it does not take any parts from the WIP buffer

125
00:05:12,060 --> 00:05:14,790
and it does not add any kanbans to the kanban buffer

126
00:05:14,790 --> 00:05:17,730
while it's down.

127
00:05:17,730 --> 00:05:20,580
If the first machine remains operational,

128
00:05:20,580 --> 00:05:21,990
it can continue to work.

129
00:05:21,990 --> 00:05:24,060
It removes cards from the kanban buffer

130
00:05:24,060 --> 00:05:29,060
and adds parts with kanbans attached to the WIP buffer.

131
00:05:29,060 --> 00:05:30,770
The upstream machine can keep operating

132
00:05:30,770 --> 00:05:34,310
until there are no more kanbans in the kanban buffer.

133
00:05:34,310 --> 00:05:36,490
We have not considered the possibility

134
00:05:36,490 --> 00:05:40,080
that the buffer could get full and block the first machine.

135
00:05:40,080 --> 00:05:42,000
In fact, we have assumed that both the kanban

136
00:05:42,000 --> 00:05:44,490
buffer and the WIP buffer are infinite.

137
00:05:44,490 --> 00:05:46,890
The only thing that stops production, other than failures

138
00:05:46,890 --> 00:05:49,610
and so forth, at the first machine

139
00:05:49,610 --> 00:05:52,160
is the kanban buffer becoming empty.

140
00:05:52,160 --> 00:05:53,930
When that happens, all the kanban cards

141
00:05:53,930 --> 00:05:56,630
are attached to parts which are in the WIP buffer.

142
00:05:56,630 --> 00:05:59,270
Suppose there are a total of n cards.

143
00:05:59,270 --> 00:06:02,000
The buffer is then holding n parts, the most parts

144
00:06:02,000 --> 00:06:04,190
it can ever hold if we operate the system the way

145
00:06:04,190 --> 00:06:06,820
we've described.

146
00:06:06,820 --> 00:06:08,320
So instead of having actual buffers,

147
00:06:08,320 --> 00:06:11,680
this policy could be implemented by a finite buffer.

148
00:06:11,680 --> 00:06:15,100
If we choose the buffer size to be n, the behavior of the line

149
00:06:15,100 --> 00:06:17,230
would be the same as what we've described.

150
00:06:17,230 --> 00:06:19,960
Many factories do this, some by painting areas on the shop

151
00:06:19,960 --> 00:06:23,440
floor for WIP storage, others by reserving a specific amount

152
00:06:23,440 --> 00:06:24,796
of shelf space.

153
00:06:24,796 --> 00:06:26,920
When the painted area is full, the upstream machine

154
00:06:26,920 --> 00:06:29,350
is blocked and has to wait.

155
00:06:29,350 --> 00:06:31,480
Now, let's consider a long line consisting

156
00:06:31,480 --> 00:06:35,020
of many machines and buffers connected in the same way.

157
00:06:35,020 --> 00:06:37,360
If the last machine stops for a long enough time,

158
00:06:37,360 --> 00:06:40,880
it can prevent the next to last from working.

159
00:06:40,880 --> 00:06:42,560
If the stoppage lasts long enough,

160
00:06:42,560 --> 00:06:44,210
the machine upstream of that can be

161
00:06:44,210 --> 00:06:49,657
prevented from working in the same way, and so forth.

162
00:06:49,657 --> 00:06:51,490
We can think of the last machine in the line

163
00:06:51,490 --> 00:06:53,320
as representing demand.

164
00:06:53,320 --> 00:06:55,030
If demand is reduced, we can treat it

165
00:06:55,030 --> 00:06:58,250
as an intermediate stoppage of that machine.

166
00:06:58,250 --> 00:07:01,751
In that case, if the last kanban buffer becomes empty,

167
00:07:01,751 --> 00:07:04,250
it prevents the next to last machine from working and making

168
00:07:04,250 --> 00:07:06,530
inventory that cannot be sold.

169
00:07:06,530 --> 00:07:09,500
This propagates the intermittent stoppage upstream

170
00:07:09,500 --> 00:07:13,130
and this prevents any stage from producing excess inventory.

171
00:07:13,130 --> 00:07:15,710
The maximum amount of inventory that any machine could make

172
00:07:15,710 --> 00:07:17,600
is limited by the number of kanbans that

173
00:07:17,600 --> 00:07:19,735
are allocated to that stage.

174
00:07:19,735 --> 00:07:20,235


